/*
 * generated by Xtext 2.15.0
 */
grammar InternalVideoGen;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.mlh.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.mlh.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.mlh.services.VideoGenGrammarAccess;

}

@parser::members {

 	private VideoGenGrammarAccess grammarAccess;

    public InternalVideoGenParser(TokenStream input, VideoGenGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "VideoGen";
   	}

   	@Override
   	protected VideoGenGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleVideoGen
entryRuleVideoGen returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVideoGenRule()); }
	iv_ruleVideoGen=ruleVideoGen
	{ $current=$iv_ruleVideoGen.current; }
	EOF;

// Rule VideoGen
ruleVideoGen returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getVideoGenAccess().getVideoGenAction_0(),
					$current);
			}
		)
		otherlv_1='VideoGen'
		{
			newLeafNode(otherlv_1, grammarAccess.getVideoGenAccess().getVideoGenKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getVideoGenAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVideoGenAccess().getVideosVideoTypeParserRuleCall_3_0());
				}
				lv_videos_3_0=ruleVideoType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVideoGenRule());
					}
					add(
						$current,
						"videos",
						lv_videos_3_0,
						"org.xtext.mlh.VideoGen.VideoType");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getVideoGenAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleVideoType
entryRuleVideoType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVideoTypeRule()); }
	iv_ruleVideoType=ruleVideoType
	{ $current=$iv_ruleVideoType.current; }
	EOF;

// Rule VideoType
ruleVideoType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getVideoTypeAccess().getMandatoryParserRuleCall_0());
		}
		this_Mandatory_0=ruleMandatory
		{
			$current = $this_Mandatory_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getVideoTypeAccess().getOptionalParserRuleCall_1());
		}
		this_Optional_1=ruleOptional
		{
			$current = $this_Optional_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getVideoTypeAccess().getAlternativesParserRuleCall_2());
		}
		this_Alternatives_2=ruleAlternatives
		{
			$current = $this_Alternatives_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleMandatory
entryRuleMandatory returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMandatoryRule()); }
	iv_ruleMandatory=ruleMandatory
	{ $current=$iv_ruleMandatory.current; }
	EOF;

// Rule Mandatory
ruleMandatory returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='mandatory'
		{
			newLeafNode(otherlv_0, grammarAccess.getMandatoryAccess().getMandatoryKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMandatoryAccess().getVideoseqVideoSeqParserRuleCall_1_0());
				}
				lv_videoseq_1_0=ruleVideoSeq
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMandatoryRule());
					}
					set(
						$current,
						"videoseq",
						lv_videoseq_1_0,
						"org.xtext.mlh.VideoGen.VideoSeq");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleOptional
entryRuleOptional returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOptionalRule()); }
	iv_ruleOptional=ruleOptional
	{ $current=$iv_ruleOptional.current; }
	EOF;

// Rule Optional
ruleOptional returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='optional'
		{
			newLeafNode(otherlv_0, grammarAccess.getOptionalAccess().getOptionalKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOptionalAccess().getVideoseqVideoSeqParserRuleCall_1_0());
				}
				lv_videoseq_1_0=ruleVideoSeq
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOptionalRule());
					}
					set(
						$current,
						"videoseq",
						lv_videoseq_1_0,
						"org.xtext.mlh.VideoGen.VideoSeq");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAlternatives
entryRuleAlternatives returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAlternativesRule()); }
	iv_ruleAlternatives=ruleAlternatives
	{ $current=$iv_ruleAlternatives.current; }
	EOF;

// Rule Alternatives
ruleAlternatives returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='alternatives'
		{
			newLeafNode(otherlv_0, grammarAccess.getAlternativesAccess().getAlternativesKeyword_0());
		}
		(
			(
				lv_id_1_0=RULE_ID
				{
					newLeafNode(lv_id_1_0, grammarAccess.getAlternativesAccess().getIdIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAlternativesRule());
					}
					setWithLastConsumed(
						$current,
						"id",
						lv_id_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getAlternativesAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAlternativesAccess().getVideoseqsVideoSeqParserRuleCall_3_0());
				}
				lv_videoseqs_3_0=ruleVideoSeq
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAlternativesRule());
					}
					add(
						$current,
						"videoseqs",
						lv_videoseqs_3_0,
						"org.xtext.mlh.VideoGen.VideoSeq");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getAlternativesAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleVideoSeq
entryRuleVideoSeq returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVideoSeqRule()); }
	iv_ruleVideoSeq=ruleVideoSeq
	{ $current=$iv_ruleVideoSeq.current; }
	EOF;

// Rule VideoSeq
ruleVideoSeq returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='videoSeq'
		{
			newLeafNode(otherlv_0, grammarAccess.getVideoSeqAccess().getVideoSeqKeyword_0());
		}
		(
			(
				lv_vid_1_0=RULE_ID
				{
					newLeafNode(lv_vid_1_0, grammarAccess.getVideoSeqAccess().getVidIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVideoSeqRule());
					}
					setWithLastConsumed(
						$current,
						"vid",
						lv_vid_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)?
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getVideoSeqAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				lv_url_3_0=RULE_STRING
				{
					newLeafNode(lv_url_3_0, grammarAccess.getVideoSeqAccess().getUrlSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVideoSeqRule());
					}
					setWithLastConsumed(
						$current,
						"url",
						lv_url_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getVideoSeqAccess().getDescriptionDescriptionParserRuleCall_4_0());
				}
				lv_description_4_0=ruleDescription
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVideoSeqRule());
					}
					set(
						$current,
						"description",
						lv_description_4_0,
						"org.xtext.mlh.VideoGen.Description");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getVideoSeqAccess().getDurationDurationParserRuleCall_5_0());
				}
				lv_duration_5_0=ruleDuration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVideoSeqRule());
					}
					set(
						$current,
						"duration",
						lv_duration_5_0,
						"org.xtext.mlh.VideoGen.Duration");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getVideoSeqAccess().getDisplay_statsDisplay_statsParserRuleCall_6_0());
				}
				lv_display_stats_6_0=ruleDisplay_stats
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVideoSeqRule());
					}
					set(
						$current,
						"display_stats",
						lv_display_stats_6_0,
						"org.xtext.mlh.VideoGen.Display_stats");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getVideoSeqAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleDescription
entryRuleDescription returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDescriptionRule()); }
	iv_ruleDescription=ruleDescription
	{ $current=$iv_ruleDescription.current; }
	EOF;

// Rule Description
ruleDescription returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDescriptionAccess().getDescriptionAction_0(),
					$current);
			}
		)
		otherlv_1='description='
		{
			newLeafNode(otherlv_1, grammarAccess.getDescriptionAccess().getDescriptionKeyword_1());
		}
		(
			(
				lv_description_2_0=RULE_STRING
				{
					newLeafNode(lv_description_2_0, grammarAccess.getDescriptionAccess().getDescriptionSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDescriptionRule());
					}
					setWithLastConsumed(
						$current,
						"description",
						lv_description_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)?
	)
;

// Entry rule entryRuleDuration
entryRuleDuration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDurationRule()); }
	iv_ruleDuration=ruleDuration
	{ $current=$iv_ruleDuration.current; }
	EOF;

// Rule Duration
ruleDuration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDurationAccess().getDurationAction_0(),
					$current);
			}
		)
		otherlv_1='duration='
		{
			newLeafNode(otherlv_1, grammarAccess.getDurationAccess().getDurationKeyword_1());
		}
		(
			(
				lv_duration_2_0=RULE_INT
				{
					newLeafNode(lv_duration_2_0, grammarAccess.getDurationAccess().getDurationINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDurationRule());
					}
					setWithLastConsumed(
						$current,
						"duration",
						lv_duration_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)?
	)
;

// Entry rule entryRuleDisplay_stats
entryRuleDisplay_stats returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDisplay_statsRule()); }
	iv_ruleDisplay_stats=ruleDisplay_stats
	{ $current=$iv_ruleDisplay_stats.current; }
	EOF;

// Rule Display_stats
ruleDisplay_stats returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDisplay_statsAccess().getDisplay_statsAction_0(),
					$current);
			}
		)
		otherlv_1='display_stats='
		{
			newLeafNode(otherlv_1, grammarAccess.getDisplay_statsAccess().getDisplay_statsKeyword_1());
		}
		(
			(
				lv_display_stats_2_0=RULE_INT
				{
					newLeafNode(lv_display_stats_2_0, grammarAccess.getDisplay_statsAccess().getDisplay_statsINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDisplay_statsRule());
					}
					setWithLastConsumed(
						$current,
						"display_stats",
						lv_display_stats_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)?
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
