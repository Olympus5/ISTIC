/*
 * generated by Xtext 2.15.0
 */
package org.xtext.mlh.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class VideoGenGrammarAccess extends AbstractGrammarElementFinder {
	
	public class VideoGenElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.mlh.VideoGen.VideoGen");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cVideoGenAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cVideoGenKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cVideosAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cVideosVideoTypeParserRuleCall_3_0 = (RuleCall)cVideosAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//VideoGen:
		//	{VideoGen} 'VideoGen' '{' videos+=VideoType* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{VideoGen} 'VideoGen' '{' videos+=VideoType* '}'
		public Group getGroup() { return cGroup; }
		
		//{VideoGen}
		public Action getVideoGenAction_0() { return cVideoGenAction_0; }
		
		//'VideoGen'
		public Keyword getVideoGenKeyword_1() { return cVideoGenKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//videos+=VideoType*
		public Assignment getVideosAssignment_3() { return cVideosAssignment_3; }
		
		//VideoType
		public RuleCall getVideosVideoTypeParserRuleCall_3_0() { return cVideosVideoTypeParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class VideoTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.mlh.VideoGen.VideoType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cMandatoryParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cOptionalParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cAlternativesParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//VideoType:
		//	Mandatory | Optional | Alternatives;
		@Override public ParserRule getRule() { return rule; }
		
		//Mandatory | Optional | Alternatives
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Mandatory
		public RuleCall getMandatoryParserRuleCall_0() { return cMandatoryParserRuleCall_0; }
		
		//Optional
		public RuleCall getOptionalParserRuleCall_1() { return cOptionalParserRuleCall_1; }
		
		//Alternatives
		public RuleCall getAlternativesParserRuleCall_2() { return cAlternativesParserRuleCall_2; }
	}
	public class MandatoryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.mlh.VideoGen.Mandatory");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMandatoryKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cVideoseqAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVideoseqVideoSeqParserRuleCall_1_0 = (RuleCall)cVideoseqAssignment_1.eContents().get(0);
		
		//Mandatory:
		//	'mandatory' videoseq=VideoSeq;
		@Override public ParserRule getRule() { return rule; }
		
		//'mandatory' videoseq=VideoSeq
		public Group getGroup() { return cGroup; }
		
		//'mandatory'
		public Keyword getMandatoryKeyword_0() { return cMandatoryKeyword_0; }
		
		//videoseq=VideoSeq
		public Assignment getVideoseqAssignment_1() { return cVideoseqAssignment_1; }
		
		//VideoSeq
		public RuleCall getVideoseqVideoSeqParserRuleCall_1_0() { return cVideoseqVideoSeqParserRuleCall_1_0; }
	}
	public class OptionalElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.mlh.VideoGen.Optional");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOptionalKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cVideoseqAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVideoseqVideoSeqParserRuleCall_1_0 = (RuleCall)cVideoseqAssignment_1.eContents().get(0);
		
		//Optional:
		//	'optional' videoseq=VideoSeq;
		@Override public ParserRule getRule() { return rule; }
		
		//'optional' videoseq=VideoSeq
		public Group getGroup() { return cGroup; }
		
		//'optional'
		public Keyword getOptionalKeyword_0() { return cOptionalKeyword_0; }
		
		//videoseq=VideoSeq
		public Assignment getVideoseqAssignment_1() { return cVideoseqAssignment_1; }
		
		//VideoSeq
		public RuleCall getVideoseqVideoSeqParserRuleCall_1_0() { return cVideoseqVideoSeqParserRuleCall_1_0; }
	}
	public class AlternativesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.mlh.VideoGen.Alternatives");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAlternativesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cIdAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cIdIDTerminalRuleCall_1_0 = (RuleCall)cIdAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cVideoseqsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cVideoseqsVideoSeqParserRuleCall_3_0 = (RuleCall)cVideoseqsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Alternatives:
		//	'alternatives' id=ID '{' videoseqs+=VideoSeq+ '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'alternatives' id=ID '{' videoseqs+=VideoSeq+ '}'
		public Group getGroup() { return cGroup; }
		
		//'alternatives'
		public Keyword getAlternativesKeyword_0() { return cAlternativesKeyword_0; }
		
		//id=ID
		public Assignment getIdAssignment_1() { return cIdAssignment_1; }
		
		//ID
		public RuleCall getIdIDTerminalRuleCall_1_0() { return cIdIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//videoseqs+=VideoSeq+
		public Assignment getVideoseqsAssignment_3() { return cVideoseqsAssignment_3; }
		
		//VideoSeq
		public RuleCall getVideoseqsVideoSeqParserRuleCall_3_0() { return cVideoseqsVideoSeqParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class VideoSeqElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.mlh.VideoGen.VideoSeq");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cVideoSeqKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cVidAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVidIDTerminalRuleCall_1_0 = (RuleCall)cVidAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cUrlAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cUrlSTRINGTerminalRuleCall_3_0 = (RuleCall)cUrlAssignment_3.eContents().get(0);
		private final Assignment cDescriptionAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cDescriptionDescriptionParserRuleCall_4_0 = (RuleCall)cDescriptionAssignment_4.eContents().get(0);
		private final Assignment cDurationAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cDurationDurationParserRuleCall_5_0 = (RuleCall)cDurationAssignment_5.eContents().get(0);
		private final Assignment cDisplay_statsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cDisplay_statsDisplay_statsParserRuleCall_6_0 = (RuleCall)cDisplay_statsAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//VideoSeq:
		//	'videoSeq' vid=ID? '{'
		//	url=STRING
		//	description=Description?
		//	duration=Duration?
		//	display_stats=Display_stats?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'videoSeq' vid=ID? '{' url=STRING description=Description? duration=Duration? display_stats=Display_stats? '}'
		public Group getGroup() { return cGroup; }
		
		//'videoSeq'
		public Keyword getVideoSeqKeyword_0() { return cVideoSeqKeyword_0; }
		
		//vid=ID?
		public Assignment getVidAssignment_1() { return cVidAssignment_1; }
		
		//ID
		public RuleCall getVidIDTerminalRuleCall_1_0() { return cVidIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//url=STRING
		public Assignment getUrlAssignment_3() { return cUrlAssignment_3; }
		
		//STRING
		public RuleCall getUrlSTRINGTerminalRuleCall_3_0() { return cUrlSTRINGTerminalRuleCall_3_0; }
		
		//description=Description?
		public Assignment getDescriptionAssignment_4() { return cDescriptionAssignment_4; }
		
		//Description
		public RuleCall getDescriptionDescriptionParserRuleCall_4_0() { return cDescriptionDescriptionParserRuleCall_4_0; }
		
		//duration=Duration?
		public Assignment getDurationAssignment_5() { return cDurationAssignment_5; }
		
		//Duration
		public RuleCall getDurationDurationParserRuleCall_5_0() { return cDurationDurationParserRuleCall_5_0; }
		
		//display_stats=Display_stats?
		public Assignment getDisplay_statsAssignment_6() { return cDisplay_statsAssignment_6; }
		
		//Display_stats
		public RuleCall getDisplay_statsDisplay_statsParserRuleCall_6_0() { return cDisplay_statsDisplay_statsParserRuleCall_6_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class DescriptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.mlh.VideoGen.Description");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDescriptionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cDescriptionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDescriptionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_2_0 = (RuleCall)cDescriptionAssignment_2.eContents().get(0);
		
		//Description:
		//	{Description} 'description=' description=STRING?;
		@Override public ParserRule getRule() { return rule; }
		
		//{Description} 'description=' description=STRING?
		public Group getGroup() { return cGroup; }
		
		//{Description}
		public Action getDescriptionAction_0() { return cDescriptionAction_0; }
		
		//'description='
		public Keyword getDescriptionKeyword_1() { return cDescriptionKeyword_1; }
		
		//description=STRING?
		public Assignment getDescriptionAssignment_2() { return cDescriptionAssignment_2; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_2_0() { return cDescriptionSTRINGTerminalRuleCall_2_0; }
	}
	public class DurationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.mlh.VideoGen.Duration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDurationAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cDurationKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDurationAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDurationINTTerminalRuleCall_2_0 = (RuleCall)cDurationAssignment_2.eContents().get(0);
		
		//Duration:
		//	{Duration} 'duration=' duration=INT?;
		@Override public ParserRule getRule() { return rule; }
		
		//{Duration} 'duration=' duration=INT?
		public Group getGroup() { return cGroup; }
		
		//{Duration}
		public Action getDurationAction_0() { return cDurationAction_0; }
		
		//'duration='
		public Keyword getDurationKeyword_1() { return cDurationKeyword_1; }
		
		//duration=INT?
		public Assignment getDurationAssignment_2() { return cDurationAssignment_2; }
		
		//INT
		public RuleCall getDurationINTTerminalRuleCall_2_0() { return cDurationINTTerminalRuleCall_2_0; }
	}
	public class Display_statsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.mlh.VideoGen.Display_stats");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDisplay_statsAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cDisplay_statsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDisplay_statsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDisplay_statsINTTerminalRuleCall_2_0 = (RuleCall)cDisplay_statsAssignment_2.eContents().get(0);
		
		//Display_stats:
		//	{Display_stats} 'display_stats=' display_stats=INT?;
		@Override public ParserRule getRule() { return rule; }
		
		//{Display_stats} 'display_stats=' display_stats=INT?
		public Group getGroup() { return cGroup; }
		
		//{Display_stats}
		public Action getDisplay_statsAction_0() { return cDisplay_statsAction_0; }
		
		//'display_stats='
		public Keyword getDisplay_statsKeyword_1() { return cDisplay_statsKeyword_1; }
		
		//display_stats=INT?
		public Assignment getDisplay_statsAssignment_2() { return cDisplay_statsAssignment_2; }
		
		//INT
		public RuleCall getDisplay_statsINTTerminalRuleCall_2_0() { return cDisplay_statsINTTerminalRuleCall_2_0; }
	}
	
	
	private final VideoGenElements pVideoGen;
	private final VideoTypeElements pVideoType;
	private final MandatoryElements pMandatory;
	private final OptionalElements pOptional;
	private final AlternativesElements pAlternatives;
	private final VideoSeqElements pVideoSeq;
	private final DescriptionElements pDescription;
	private final DurationElements pDuration;
	private final Display_statsElements pDisplay_stats;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public VideoGenGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pVideoGen = new VideoGenElements();
		this.pVideoType = new VideoTypeElements();
		this.pMandatory = new MandatoryElements();
		this.pOptional = new OptionalElements();
		this.pAlternatives = new AlternativesElements();
		this.pVideoSeq = new VideoSeqElements();
		this.pDescription = new DescriptionElements();
		this.pDuration = new DurationElements();
		this.pDisplay_stats = new Display_statsElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.mlh.VideoGen".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//VideoGen:
	//	{VideoGen} 'VideoGen' '{' videos+=VideoType* '}';
	public VideoGenElements getVideoGenAccess() {
		return pVideoGen;
	}
	
	public ParserRule getVideoGenRule() {
		return getVideoGenAccess().getRule();
	}
	
	//VideoType:
	//	Mandatory | Optional | Alternatives;
	public VideoTypeElements getVideoTypeAccess() {
		return pVideoType;
	}
	
	public ParserRule getVideoTypeRule() {
		return getVideoTypeAccess().getRule();
	}
	
	//Mandatory:
	//	'mandatory' videoseq=VideoSeq;
	public MandatoryElements getMandatoryAccess() {
		return pMandatory;
	}
	
	public ParserRule getMandatoryRule() {
		return getMandatoryAccess().getRule();
	}
	
	//Optional:
	//	'optional' videoseq=VideoSeq;
	public OptionalElements getOptionalAccess() {
		return pOptional;
	}
	
	public ParserRule getOptionalRule() {
		return getOptionalAccess().getRule();
	}
	
	//Alternatives:
	//	'alternatives' id=ID '{' videoseqs+=VideoSeq+ '}';
	public AlternativesElements getAlternativesAccess() {
		return pAlternatives;
	}
	
	public ParserRule getAlternativesRule() {
		return getAlternativesAccess().getRule();
	}
	
	//VideoSeq:
	//	'videoSeq' vid=ID? '{'
	//	url=STRING
	//	description=Description?
	//	duration=Duration?
	//	display_stats=Display_stats?
	//	'}';
	public VideoSeqElements getVideoSeqAccess() {
		return pVideoSeq;
	}
	
	public ParserRule getVideoSeqRule() {
		return getVideoSeqAccess().getRule();
	}
	
	//Description:
	//	{Description} 'description=' description=STRING?;
	public DescriptionElements getDescriptionAccess() {
		return pDescription;
	}
	
	public ParserRule getDescriptionRule() {
		return getDescriptionAccess().getRule();
	}
	
	//Duration:
	//	{Duration} 'duration=' duration=INT?;
	public DurationElements getDurationAccess() {
		return pDuration;
	}
	
	public ParserRule getDurationRule() {
		return getDurationAccess().getRule();
	}
	
	//Display_stats:
	//	{Display_stats} 'display_stats=' display_stats=INT?;
	public Display_statsElements getDisplay_statsAccess() {
		return pDisplay_stats;
	}
	
	public ParserRule getDisplay_statsRule() {
		return getDisplay_statsAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
